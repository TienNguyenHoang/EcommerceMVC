@using EcommerceMVC.Data
@using EcommerceMVC.ViewModels
@using Microsoft.AspNetCore.Identity
@model IEnumerable<EcommerceMVC.ViewModels.CartItem>
@inject UserManager<User> userManager;
@{
    ViewData["Title"] = "Thanh toán";
	var user = await userManager.GetUserAsync(User);
}

<!-- Single Page Header start -->
<div class="container-fluid page-header py-5">
	<h1 class="text-center text-white display-6">Thanh toán</h1>
	<ol class="breadcrumb justify-content-center mb-0">
		<li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
		<li class="breadcrumb-item"><a href="#">Sản phẩm</a></li>
		<li class="breadcrumb-item active text-white">Thanh toán</li>
	</ol>
</div>
<!-- Single Page Header End -->
<!-- Checkout Page Start -->
<div class="container-fluid py-5">
	<div class="container py-5">
		<h1 class="mb-4">Chi tiết đơn hàng</h1>
		<form asp-action="Checkout" asp-controller="Cart">
			<div class="row g-5">
				<div class="col-md-12 col-lg-6 col-xl-7">
					<div asp-validation-summary="All" class="text-danger" id="validationSummary"></div>
					<div class="form-item delivery-info">
						<label class="form-label my-3">Người nhận hàng<sup>*</sup></label>
						<input type="text" name="ReceiverName" id="ReceiverName" class="form-control" value="@user.UserName">
					</div>
					<div class="form-item delivery-info">
						<label class="form-label my-3">Địa chỉ nhận hàng<sup>*</sup></label>
						<input type="text" name="Address" id="Address" class="form-control" value="@user.HomeAddress">
					</div>
					<div class="form-item delivery-info">
						<label class="form-label my-3">Điện thoại<sup>*</sup></label>
						<input type="text" name="Phone" id="Phone" class="form-control" value="@(user.PhoneNumber??"")">
					</div>
					<div class="form-item mt-3">
						<textarea name="Note" id="Note" class="form-control" spellcheck="false" cols="30" rows="11" placeholder="Ghi chú"></textarea>
					</div>
					<input type="submit" name="payment" class="btn border-secondary text-uppercase text-primary w-100 mt-2" value="Thanh toán khi nhận hàng">
					<input type="submit" name="payment" class="btn border-secondary text-uppercase text-primary w-100 mt-2" value="Thanh toán VNPay">
					<div id="paypal-button-container" class="form-item mt-3" style="max-width:1000px;"></div>
				</div>
				<div class="col-md-12 col-lg-6 col-xl-5">
					<div class="table-responsive">
						<table class="table">
							<thead>
								<tr>
									<th scope="col">Sản phẩm</th>
									<th scope="col">Tên</th>
									<th scope="col">Giá</th>
									<th scope="col">Số Lượng</th>
									<th scope="col">Thành Tiền</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var item in Model)
								{
									<tr>
										<th scope="row">
											<div class="d-flex align-items-center mt-2">
												<img src="~/Hinh/HangHoa/@item.Image" class="img-fluid rounded-circle" style="width: 90px; height: 90px;" alt="@item.ProductName">
											</div>
										</th>
										<td class="py-5">@item.ProductName</td>
										<td class="py-5">@VNDConverter.ConvertToVND(item.Price)</td>
										<td class="py-5">@item.Quantity</td>
										<td class="py-5">@VNDConverter.ConvertToVND(item.total)</td>
									</tr>
								}
								<tr>
									<th scope="row">
									</th>
									<td class="py-5"></td>
									<td class="py-5"></td>
									<td class="py-5">
										<p class="mb-0 text-dark py-3">Tổng Tiền</p>
									</td>
									<td class="py-5">
										<div class="py-3 border-bottom border-top">
											<p class="mb-0 text-dark">@VNDConverter.ConvertToVND(Model.Sum(p => p.total))</p>
										</div>
									</td>
								</tr>
								<tr>
									<th scope="row">
									</th>
									<td class="py-5">
										<p class="mb-0 text-dark py-4">Phí vận chuyển</p>
									</td>
									<td class="py-5"></td>
									<td class="py-5"></td>
									<td class="py-5">
										<div class="py-3 border-bottom border-top">
											<p class="mb-0 text-dark">Miễn phí vận chuyển</p>
										</div>
									</td>
								</tr>
								<tr>
									<th scope="row">
									</th>
									<td class="py-5">
										<p class="mb-0 text-dark text-uppercase py-3">Tổng Tiền</p>
									</td>
									<td class="py-5"></td>
									<td class="py-5"></td>
									<td class="py-5">
										<div class="py-3 border-bottom border-top">
											<p class="mb-0 text-dark">@VNDConverter.ConvertToVND(Model.Sum(p => p.total))</p>
										</div>
									</td>
								</tr>
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</form>
	</div>
</div>
<!-- Checkout Page End -->
@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script src="https://www.paypal.com/sdk/js?client-id=@ViewBag.PaypalClientId"></script>
	<script>
		var validationSummary = document.getElementById("validationSummary");
		var ul = document.createElement("ul");
		paypal.Buttons({
			style: {
				color: 'silver',
				tagline: 'false'
			},
			createOrder: (data, actions) => {
				return fetch("/Cart/create-paypal-order", {
					method: "post",
					headers: {
						"Content-Type": "application/json"
					},
					body: JSON.stringify({
						ReceiverName: document.getElementById("ReceiverName").value,
						Address: document.getElementById("Address").value,
						Phone: document.getElementById("Phone").value,
						Note: document.getElementById("Note").value
					})
				}).then((response) => {
					if (!response.ok) {
						return response.json().then(error => { throw error; });
					}
					return response.json();
				}).then((order) => {
					validationSummary.innerHTML = "";
					return order.id;
				})
					.catch(error => {
						if (error.errors) {
							ul.innerHTML = "";
							for (const key in error.errors) {
								var li = document.createElement("li");
								li.textContent = error.errors[key];
								ul.appendChild(li);
							}
						}
						validationSummary.innerHTML = ul.outerHTML
					});
			},
			onApprove: (data, actions) => {
				return fetch(`/Cart/capture-paypal-order?orderId=${data.orderID}`, {
					method: "post",
					headers: {
						"Content-Type": "application/json"
					},
					body: JSON.stringify({
						ReceiverName: document.getElementById("ReceiverName").value,
						Address: document.getElementById("Address").value,
						Phone: document.getElementById("Phone").value,
						Note: document.getElementById("Note").value
					})
				}).then((response) => {
					if (!response.ok) {
						return response.json().then(error => { throw error; });
					}
					//Đổi địa chỉ tới action thông báo thành công
					window.location.href = "/Order/Index";
				}).catch(error => alert(error.message));
			}
		}).render('#paypal-button-container');
	</script>
}